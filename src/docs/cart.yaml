openapi: 3.0.0
info:
  title: Documentación de la API de Carts
  description: Documentación de la API para gestionar carts.
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Servidor de desarrollo
tags:
  - name: Cart
    description: Endpoints referidos al manejo del Cart

paths:

  /api/carts:
    get:
      summary: Obtener todos los carritos
      description: Obtiene todos los carritos disponibles.
      tags:
        - Cart
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno

    post:
      summary: Crear nuevo carrito
      description: Crea un nuevo carrito de compras.
      tags:
        - Cart
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno

  /api/carts/{cartId}:
    get:
      summary: Obtener un carrito
      description: Obtiene un carrito por su ID.
      tags:
        - Cart
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno

    put:
      summary: Actualizar un carrito
      description: Actualiza un carrito por su ID.
      tags:
        - Cart
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno

    delete:
      summary: Eliminar un carrito
      description: Elimina un carrito por su ID.
      tags:
        - Cart
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno

  /api/carts/{cartId}/product/{productId}:
    post:
      summary: Agregar producto al carrito
      description: Agrega un producto al carrito de compras.
      tags:
        - Cart
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a agregar al carrito
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: "Camisa"
              price: 29.99
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              example:
                message: "Producto agregado al carrito exitosamente"
        '500':
          description: Error interno

    delete:
      summary: Eliminar producto del carrito
      description: Elimina un producto del carrito de compras.
      tags:
        - Cart
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a eliminar del carrito
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: "Camisa"
              price: 29.99
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              example:
                message: "Producto eliminado del carrito exitosamente"
        '500':
          description: Error interno

    put:
      summary: Actualizar la cantidad de un producto en el carrito
      description: Actualiza la cantidad de un producto en el carrito de compras.
      tags:
        - Cart
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: "Camisa"
              price: 29.99
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              example:
                message: "Producto actualizado exitosamente"
        '500':
          description: Error interno
    
  /api/carts/{cartId}/purchase:
    post:
      summary: Crear un nuevo ticket
      description: Crea un nuevo ticket para el usuario, borra el contenido del Carrito.
      tags: [Cart]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              example:
                code: "TCKT123456"
                purchase_datetime: "2024-03-27T12:00:00Z"
                amount: 1
                purchaser: "usuario123"
        '500':
          description: Error interno

components:
  schemas:
    Ticket:
      type: object
      properties:
        code:
          type: string
          description: Código único del ticket (Auto Generado).
        purchase_datetime:
          type: string
          format: date-time
          description: Fecha y hora de la compra del ticket.
        amount:
          type: number
          description: Cantidad del ticket.
        purchaser:
          type: string
          description: Comprador del ticket.
      required:
        - amount
        - purchaser
    Product:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto.
        price:
          type: number
          description: Precio del producto.
      required:
        - name
        - price
    Cart:
      type: object
      properties:
        cart:
          type: object
          properties:
            id:
              type: string
              description: ID del carrito.
            products:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: string
                    description: ID del producto en el carrito.
                  quantity:
                    type: integer
                    description: Cantidad del producto en el carrito.
                  name:
                    type: string
                    description: Nombre del producto en el carrito.
                  price:
                    type: number
                    description: Precio del producto en el carrito.
      required:
        - user
        - products